I"j<p><u class="faded-highlight">Automated deployments with AWS and CircleCi<u>
<!--more--></u></u></p>
<p>Go on and log in to you AWS console.</p>

<p>Now we will have to,</p>

<ul>
    <li>create IAM users in AWS with S3 rights, </li>
    <li>note the access keys, </li>
    <li>create an S3 bucket for static web hosting, </li>
    <li>and later provide those keys to CircleCI as environment variables.</li>
</ul>

<p>If you have trouble with this section please take the time to check out the resources below</p>

<ul>
<li>The chapter “Deployment to AWS” in the <a href="https://medium.com/@eferhatg/create-react-app-continuous-integration-config-with-circleci-and-aws-2b0238cde169" target="_blank">this tutorial</a> by Eyup Ferhat Guducu,
</li>

<li>and <a href="https://techinscribed.com/deploy-frontend-application-to-aws-s3-using-circle-ci/">this tutorial</a> by Praveen to do this via Circle CI.
</li>

<li>You can also review CircleCi’s deployment examples for AWS and other providers.
<br />- <a href="https://circleci.com/docs/2.0/deployment-examples/index.html#aws">https://circleci.com/docs/2.0/deployment-examples/index.html#aws</a>
<br />- <a href="https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project">https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project</a>
</li>
</ul>

<p>We create the CircleCI config file seen below inside our root directory “.circleci/config.yml”.</p>
<p><u class="faded-highlight no-underline">&lt;root&gt;/.circleci/config.yml</u></p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">    <span class="na">version</span><span class="pi">:</span> <span class="m">2.1</span>
    <span class="na">orbs</span><span class="pi">:</span>
     <span class="na">aws-cli</span><span class="pi">:</span> <span class="s">circleci/aws-cli@1.4.1</span>
    <span class="na">jobs</span><span class="pi">:</span>
     <span class="na">build_web_client</span><span class="pi">:</span>
       <span class="na">docker</span><span class="pi">:</span>
         <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">circleci/node:10.16.3</span>
       <span class="na">steps</span><span class="pi">:</span>
         <span class="pi">-</span> <span class="s">checkout</span>
         <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
             <span class="na">name</span><span class="pi">:</span> <span class="s">Install Dependencies</span>
             <span class="na">command</span><span class="pi">:</span> <span class="s">cd web-client &amp;&amp; npm install</span>
         <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
             <span class="na">name</span><span class="pi">:</span> <span class="s">Run build</span>
             <span class="na">command</span><span class="pi">:</span> <span class="s">cd web-client &amp;&amp; npm run build</span>
         <span class="pi">-</span> <span class="na">persist_to_workspace</span><span class="pi">:</span>
             <span class="na">root</span><span class="pi">:</span> <span class="s">.</span>
             <span class="na">paths</span><span class="pi">:</span>
               <span class="pi">-</span> <span class="s">.</span>
     <span class="na">aws_deploy_web_client</span><span class="pi">:</span>
       <span class="na">executor</span><span class="pi">:</span> <span class="s">aws-cli/default</span>
       <span class="na">steps</span><span class="pi">:</span>
         <span class="pi">-</span> <span class="na">attach_workspace</span><span class="pi">:</span>
             <span class="na">at</span><span class="pi">:</span> <span class="s">.</span>
         <span class="pi">-</span> <span class="s">aws-cli/setup</span><span class="pi">:</span>
             <span class="na">profile-name</span><span class="pi">:</span> <span class="s">monorepo-admin</span>
         <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
             <span class="na">name</span><span class="pi">:</span> <span class="s">Upload file to S3</span>
             <span class="na">command</span><span class="pi">:</span> <span class="s">cd web-client &amp;&amp; aws s3 sync ./build/ s3://monorepo-web-client-production --acl public-read --delete</span>
    <span class="na">workflows</span><span class="pi">:</span>
     <span class="na">version</span><span class="pi">:</span> <span class="m">2</span>
     <span class="na">build-deploy</span><span class="pi">:</span>
       <span class="na">jobs</span><span class="pi">:</span>
         <span class="pi">-</span> <span class="na">build_web_client</span><span class="pi">:</span>
             <span class="na">filters</span><span class="pi">:</span>
                 <span class="na">tags</span><span class="pi">:</span>
                   <span class="na">only</span><span class="pi">:</span> <span class="s">/.*/</span>

         <span class="pi">-</span> <span class="na">aws_deploy_web_client</span><span class="pi">:</span>
             <span class="na">requires</span><span class="pi">:</span>
               <span class="pi">-</span> <span class="s">build_web_client</span> <span class="c1"># Only run deploy job once the build job has completed</span>
             <span class="na">context</span><span class="pi">:</span> <span class="s">AWS_monorepo</span>
             <span class="na">filters</span><span class="pi">:</span>
               <span class="na">branches</span><span class="pi">:</span>
                 <span class="na">only</span><span class="pi">:</span> <span class="s">main</span> <span class="c1"># Only deploy when the commit is on the main branch</span>
               <span class="na">tags</span><span class="pi">:</span>
                 <span class="na">only</span><span class="pi">:</span> <span class="s">/.*/</span></code></pre></figure>

<p>Now that we configured our project’s core, we give it a spin locally, and if all is looking good, time to push our changes.</p>

<figure class="highlight"><pre><code class="language-console" data-lang="console"><span class="gp">$</span><span class="w"> </span>git add <span class="nb">.</span> <span class="o">&amp;&amp;</span> git commit <span class="nt">-m</span> “Init React app w TS, Babel, Eslint, Webpack and CircleCI config”</code></pre></figure>

<figure class="highlight"><pre><code class="language-console" data-lang="console"><span class="gp">$</span><span class="w"> </span>git push <span class="nt">-u</span> origin main</code></pre></figure>

<p>Let’s behold the magic of automation.</p>
<ul>
    <li>Login to CircleCI using your version control system, </li>
    <li> Create a “Context” within your organization setting to set environment variables
      <br />- AWS_ACCESS_KEY_ID
      <br />- AWS_SECRET_ACCESS_KEY
      <br />- AWS_DEFAULT_REGION
    </li>
    <li> find your repo listed underneath projects and click “Set Up Project”</li>
    <li> Build with your existing config.yml </li>
</ul>

<p>Hopefully shortly afterwards you will be greeted by a successful workflow in your pipeline. If you have some troubleshooting to do, don’t worry. It will surely be worth it once it’s up and running.</p>
:ET